// $ANTLR : "Analex.g" -> "Analex.java"$

	package chess;

public interface AnalexVocabTokenTypes {
	int EOF = 1;
	int NULL_TREE_LOOKAHEAD = 3;
	int BEGIN_BOARD = 4;
	int END_BOARD = 5;
	int BEGIN_GAME = 6;
	int END_GAME = 7;
	int OP_FIN = 8;
	int BEGIN_VARIABLES = 9;
	int END_VARIABLES = 10;
	int IDENT = 11;
	int OP_SEPA = 12;
	int OP_DECL = 13;
	int OP_DELI = 14;
	int REAL = 15;
	int OP_ASIG = 16;
	int ENTERO = 17;
	int BOOLEANO = 18;
	int CADENA = 19;
	int CTE = 20;
	int S_W = 21;
	int S_D = 22;
	int EXI = 23;
	int G_N = 24;
	int G_III = 25;
	int G_II = 26;
	int X_P = 27;
	int Y_P = 28;
	int XO_S = 29;
	int YO_S = 30;
	int XE_S = 31;
	int YE_S = 32;
	int X_C = 33;
	int Y_C = 34;
	int R_C = 35;
	int MI = 36;
	int MII = 37;
	int MIII = 38;
	int GEO = 39;
	int EXP = 40;
	int R_ENTERO = 41;
	int R_REAL = 42;
	int R_BOOL = 43;
	int R_CADENA = 44;
	int WRI = 45;
	int PAU = 46;
	int OP_PAR_I = 47;
	int OP_PAR_D = 48;
	int RANDOM_BOARD = 49;
	int ADD_PIECE = 50;
	int SETUP_PIECE = 51;
	int REMOVE_PIECE = 52;
	int GENERATE_3D_BOARD = 53;
	int TRA = 54;
	int ROT = 55;
	int SCA = 56;
	int OP_SUMA = 57;
	int OP_REST = 58;
	int OP_MULT = 59;
	int OP_DIVI = 60;
	int OP_MODU = 61;
	int OP_EXPO = 62;
	int LIT_ENTERO = 63;
	int LIT_REAL = 64;
	int OP_AND = 65;
	int OP_OR = 66;
	int OP_NOT = 67;
	int LIT_BOOL = 68;
	int OP_IGUA = 69;
	int OP_DESI = 70;
	int OP_MAYO = 71;
	int OP_MENO = 72;
	int LIT_CADENA = 73;
	int INIT_FOR = 74;
	int F_FROM = 75;
	int F_UNTIL = 76;
	int F_DO = 77;
	int FIN_FOR = 78;
	int INIT_WHILE = 79;
	int W_BEGIN = 80;
	int FIN_WHILE = 81;
	int INT = 82;
	int CHAR = 83;
	int STR = 84;
	int FLO = 85;
	int LOG = 86;
	int IF = 87;
	int END_IF = 88;
	int THEN = 89;
	int DO = 90;
	int ELSE = 91;
	int FOR = 92;
	int FROM = 93;
	int TO = 94;
	int WHILE = 95;
	int END_WHILE = 96;
	int MOVE_PLAYER_W = 97;
	int MOVE_PLAYER_B = 98;
	int MOVE_RANDOMLY_W = 99;
	int MOVE_RANDOMLY_B = 100;
	int STATE = 101;
	int MOVEMENTS_LIST = 102;
	int STATE_3D = 103;
	int CHECK = 104;
	int CHECKMATE = 105;
	int STALEMATE = 106;
	int PIECE_TYPE = 107;
	int PIECE_COLOR = 108;
	int POINTS = 109;
	int C_O_LAST_MOVE = 110;
	int F_O_LAST_MOVE = 111;
	int C_D_LAST_MOVE = 112;
	int F_D_LAST_MOVE = 113;
	int RATIO_WB = 114;
	int RATIO_POINTS_WB = 115;
	int CAPTURED_PIECE_TYPE = 116;
	int CAPTURED_PIECE_COLOR = 117;
	int CASTLING = 118;
	int READ_NUMBER = 119;
	int READ_STR = 120;
	int READ_CHR = 121;
	int WRT = 122;
	int WAIT = 123;
	int MOD = 124;
	int BLANCO = 125;
	int DIGITO = 126;
	int LETRA = 127;
	int LIT_NUMERO = 128;
	int COMEN_LINEA = 129;
	int COMEN_VARIAS = 130;
	int OP_CONCAT = 131;
}
